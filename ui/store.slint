export enum TabIndex {
    Home,
    Recipient,
    History,
    Setting,
    None,
}

export enum SettingDetailIndex {
    Home,
    UI,
    About,
    Help,
    Donate,

    Accounts,
    AccountQrcode,
    AccountDetail,
    AccountMnemonic,
    SecurityAndPrivacy,
    ResetPassword,
    DeveloperMode,
    AddressBook,
    AddressBookDetail,
}

export enum SetupIndex {
    SetupType,
    CreateAccount,
    RecoverAccount,
    SetPassword,
}

export enum HomeIndex {
    Home,
    Send,
    Management,
    AddressBook,
    TransactionFee,
    WaitTransactionConfirmed,
}

export struct AccountEntry {
    uuid: string,
    name: string,
    pubkey: string,
    derive-index: int,
    avatar-index: int,
}

export struct MessageItem {
    text: string,
    text-type: string,
}

export struct SettingUI {
    font-size: string,
    font-family: string,
    language: string,
    is-dark: bool,
}

export struct SettingDeveloperMode {
    enabled: bool,
    network: string,
}

export struct SendTokenProps {
    token-uuid: string,
    derive_index: int,
    network: string,
    send-address: string,
    recipient-address: string,
    mint_address: string,
    symbol: string,
    amount: string,
    memo: string,

    spl-token-account-address: string,
    spl-token-decimals: int,
}

export global Store {
    in-out property <TabIndex> current-tab-index: TabIndex.Home;
    private property <TabIndex> current-tab-index-tmp: TabIndex.None;
    in-out property <HomeIndex> current-home-index: HomeIndex.Home;
    in-out property <SetupIndex> current-setup-index: SetupIndex.SetupType;
    in-out property <SettingDetailIndex> current-setting-detail-index: SettingDetailIndex.Home;

    in-out property <AccountEntry> current-account: {
        uuid: "uuid-1",
        name: "Account-1",
        pubkey: "pubkey-test",
        derive-index: 0,
        avatar-index: 0,
    };

    in-out property <[AccountEntry]> accounts: [
        {
            uuid: "uuid-1",
            name: "Account-1",
            pubkey: "pubkey-test",
            derive-index: 0,
            avatar-index: 0,
        }
    ];

    in-out property <MessageItem> message;
    in-out property <bool> is-first-run;
    in-out property <bool> is-show-landing-page;
    in-out property <bool> is-show-setup-page;
    in-out property <bool> is-cn: setting-ui.language == "cn";
    in-out property <SettingUI> setting-ui: {
        font-size: "16",
        font-family: "Source Han Serif CN",
        language: "cn",
        is-dark: false,
    };

    in-out property <[string]> helps: is-cn ? [
        "配置文件保存目录: ~/.config/sollaw",
        "数据库保存目录: ~/.local/share/sollaw",
        "清空配置目录和数据目录，可以重置整个程序",
        "程序不会保存明文密码，而是通过Hash算法保存密码的Hash值"
    ] : [
        "Config directory: ~/.config/sollaw",
        "Data directory: ~/.local/share/sollaw",
        "Remove all files in config directory and data directory which can reset the application",
        "It don't save your password in plaintext format. However, It will calculate the Hash value of the password and saves it int database"
    ];

    public function switch-tab(tab-index: TabIndex) {
        current-tab-index = tab-index;
    }

    public function refresh-current-tab() {
        current-tab-index-tmp = current-tab-index;
        current-tab-index = TabIndex.None;
        current-tab-index = current-tab-index-tmp;
    }
}
