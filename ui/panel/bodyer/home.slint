import { Theme, Icons } from "../../theme.slint";
import { Store, HomeIndex } from "../../store.slint";
import { Logic } from "../../logic.slint";
import { AccountBalance, Head, IconBtn, TextBtn, Banner, Label, Link, SettingDetail, SettingDetailInner, TokenTile, TokenTileEntry, TokenList } from "../../base/widgets.slint";
import { TestModeBanner } from "test-mode-banner.slint";

export global TokensSetting {
    in-out property <[TokenTileEntry]> entries: [
        {
            uuid: "uuid-1",
            icon: Icons.account,
            symbol: "SOL",
            balance: "100.34",
            balance-usdt: "$12321.34"
        },
        {
            uuid: "uuid-2",
            icon: Icons.account,
            symbol: "USDT",
            balance: "100.34",
            balance-usdt: "$100.34",
        },
        {
            uuid: "uuid-3",
            icon: Icons.account,
            symbol: "DOG",
            balance: "120.34",
            balance-usdt: "$1100.4",
        },
    ];

    in-out property <[TokenTileEntry]> all-account-tokens:[
        {
            uuid: "uuid-1",
            icon: Icons.account,
            symbol: "SOL",
            balance: "100.34",
            balance-usdt: "$12321.34"
        },
        {
            uuid: "uuid-2",
            icon: Icons.account,
            symbol: "USDT",
            balance: "100.34",
            balance-usdt: "$100.34",
        },
        {
            uuid: "uuid-3",
            icon: Icons.account,
            symbol: "DOG",
            balance: "120.34",
            balance-usdt: "$1100.4",
        },
        {
            uuid: "uuid-3",
            icon: Icons.account,
            symbol: "BOOM",
            balance: "130.34",
            balance-usdt: "$1130.8",
        },
    ];
}

component TopHead inherits Head {
    icon: Icons.crypto;
    icon-width: Theme.icon-size * 1.2;
    title: Logic.tr(Store.is-cn, "主页");
    hbox-alignment: LayoutAlignment.start;
}

component AccountDetail inherits AccountBalance {
    account-name: Store.current-account.name;
    balance: Store.current-account.balance;

    account-clicked => {
        Logic.open-account-detail(Logic.get-current-network(), Store.current-account.pubkey);
    }

    copy => {
        Logic.copy-to-clipboard(Store.current-account.pubkey);
    }
}

component ManagementBtn inherits VerticalLayout {
    padding-bottom: Theme.padding * 2;

    btn := TextBtn {
        icon: Icons.management;
        text: Logic.tr(Store.is-cn, "管理代币");
        clicked => {
            Logic.open-tokens-management(Logic.get-current-network(), Store.current-account.pubkey);
            Store.current-home-index = HomeIndex.Management;
        }
    }
}

component Management inherits SettingDetail {
    title: Logic.tr(Store.is-cn, "管理通证");
    SettingDetailInner { }
}

component Send inherits SettingDetail {
    in-out property <TokenTileEntry> entry;

    title: Logic.tr(Store.is-cn, "发送代币");
    SettingDetailInner { }
}

component Body inherits Rectangle {
    VerticalLayout {
        spacing: Theme.spacing * 2;

        AccountDetail { }

        TokenList {
            entries: TokensSetting.entries;
            clicked(entry) => {
                Logic.open-send-token(Logic.get-current-network(), entry.uuid);
                Store.current-home-index = HomeIndex.Send;
            }
        }

        ManagementBtn { }
    }
}

export component Home inherits Rectangle {
    private property <string> network: Logic.get-current-network();
    private property <TokenTileEntry> current-entry;

    if Store.current-home-index == HomeIndex.Home: VerticalLayout {
        head := TopHead { }

        if network != "main": TestModeBanner {
            network: root.network;
        }

        Body { }
    }

    if Store.current-home-index == HomeIndex.Management: Management {
        back => {
            Store.current-home-index = HomeIndex.Home;
        }
    }

    if Store.current-home-index == HomeIndex.Send: Send {
        back => {
            Store.current-home-index = HomeIndex.Home;
        }
    }
}
