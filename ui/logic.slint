import { Store, SetupIndex, SettingUI, AccountEntry } from "./store.slint";

export global Logic {
    pure callback new-mnemonics(int) -> [string];
    pure callback paste-mnemonics() -> [string];
    pure callback join-mnemonics([string]) -> string;
    pure callback is-valid-mnemonic([string]) -> bool;
    pure callback split-mnemonic(string) -> [string];

    callback show-mnemonic(string); // (password) -> void

    pure callback is-valid-sign-in-info(string, string, string) -> string; // (username, password-first, password-second) -> error_message
    pure callback is-valid-password(string) -> string; // (passwrod) -> error_message

    callback save-secret-info(string, string, [string]); // (username, password, mnemonics) -> void
    callback update-password(string, string); // (old-password, new-password) -> void
    callback update-current-derive-index(int);

    callback new-account(string, string); // (name, password) -> void
    callback update-account-name(string, string); // (uuid, name) -> void
    callback update-account-avatar-index(string, int); // (uuid, icon-index) -> void
    callback remove-account(string, string); // (password, uuid) -> void
    callback remove-all-accounts(string); // (password) -> void
    callback switch-account(string, string); // (old-uuid, new-uuid) -> void

    callback qr-code(string) -> image;
    callback add-address();
    callback update-address-name(string, string); // (uuid, name) -> void
    callback update-address(string, string); // (uuid, address) -> void
    callback remove-address(string); // (uuid) -> void

    callback update-cache-size();
    callback remove-all-cache();

    callback copy-to-clipboard(string);
    callback copy-from-clipboard() -> string;
    callback show-message(string, string);
    callback handle-ok-cancel-dialog(string, string);

    callback get-setting-ui() -> SettingUI;
    callback set-setting-ui(SettingUI);

    pure callback tr(bool, string) -> string;
    tr(is-cn, text) => { return text; }
}
