import { Theme, Icons } from "../../theme.slint";
import { Store } from "../../store.slint";
import { Logic } from "../../logic.slint";
import { Util } from "../../util.slint";
import { OkCancelDialogSetting, IconBtn, Head, Label, Tag, Link, NoDataImg, NoMessageImg, CenterLayout } from "../../base/widgets.slint";
import { Theme } from "../../theme.slint";
import { TestModeBanner } from "test-mode-banner.slint";


component TopHead inherits Head {
    icon: Icons.recipient;
    title: Logic.tr(Store.is-cn, "接收");
    hbox-alignment: LayoutAlignment.start;
}

component Body inherits Rectangle {
    VerticalLayout {
        alignment: center;
        spacing: Theme.spacing * 2;

        CenterLayout {
            Image {
                width: Math.min(250px, root.width * 0.7);
                height: self.width;
                // source: Logic.qr-code(Store.current-account.pubkey);
                source: Icons.wechat-pay;
            }
        }

        CenterLayout {
            HorizontalLayout {
                spacing: Theme.spacing * 2;

                Link {
                    // text: Store.current-account.pubkey;
                    text: "Store.current-account.pubkey";
                    overflow: elide;
                    wrap: TextWrap.no-wrap;
                    color: self.has-hover ? Theme.link-text-color : Theme.primary-text-color;
                    clicked => {
                        Logic.open-account-detail(Logic.get-current-network(), Store.current-account.pubkey);
                    }
                }

                IconBtn {
                    icon: Icons.copy;
                    clicked => {
                        Logic.copy-to-clipboard(Store.current-account.pubkey);
                    }
                }
            }
        }
    }
}

export component Recipient inherits VerticalLayout {
    private property <string> network: Logic.get-current-network();

    head := TopHead { }

    if network != "main": TestModeBanner {
        network: root.network;
    }

    body := Body { }
}
